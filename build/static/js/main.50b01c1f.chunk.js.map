{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","className","src","alt","userName","UserProfile","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","to","onSubmit","type","name","defaultValue","onChange","Credits","description","amount","credit","id","Math","floor","random","date","Date","toISOString","slice","addCredit","credits","reverse","map","htmlFor","required","min","step","Debits","debit","addDebit","debits","App","newCredits","creditList","Number","newDebits","debitList","logInInfo","newUser","currentUser","a","fetch","json","totalCredits","totalDebits","forEach","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50b01c1f.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","import React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport './Home.css'; // Import the Home.css file\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home-container\">\n        <div className='content-container'>\n        <h1>Bank of React</h1>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\" />\n        <h2>Welcome, {this.props.userName}!</h2>\n        <h2><AccountBalance accountBalance={this.props.accountBalance} /></h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\n\nimport './UserProfile.css';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div className='userprofile'>\n        <div className='profile'>\n        <h1>User Profile</h1>\n\n        <h2>Username: {this.props.userName}</h2>\n        <h3>Member Since: {this.props.memberSince}</h3>\n        <br/>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Login.css';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div className='login'>\n\n        <form onSubmit={this.handleSubmit} className='login-form'>\n        <h1>Login</h1>\n\n        <div className='login-form-row'>\n            <label className='login-form-label'>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} className='login-form-input' />\n            <label className='login-form-label'>Password</label>\n            <input type=\"password\" name=\"password\" className='login-form-input' />\n          <button className='login-form-button'>Log In</button>\n          </div>\n        </form>  \n      </div>\n    );\n  }\n}\n\nexport default LogIn;","\nimport React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport './Credits.css'; // add this line\n\nclass Credits extends Component {\n  state = {\n    description: '',\n    amount: ''\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { description, amount } = this.state;\n    const id = Math.floor(Math.random() * 100000); // generate a random id\n    const date = new Date().toISOString().slice(0, 10); // set the current date\n    const credit = { id, description, amount, date };\n\n    this.props.addCredit(credit);\n\n    this.setState({\n      description: '',\n      amount: ''\n    });\n  }\n\n\n\n  render() {\n    const creditsView = () => {\n      const { credits } = this.props;\n      const reversedCredits = credits.slice().reverse(); // Add this line to make a reversed copy of the credits array\n      return reversedCredits.map((credit) => { // Update this line to use reversedCredits instead of credits\n        let date = credit.date.slice(0, 10);\n        return (\n          <li key={credit.id} className=\"credit-item\">\n            <div className=\"credit-info\">\n              <div className=\"credit-amount\">{credit.amount}</div>\n              <div className=\"credit-description\">{credit.description}</div>\n              <div className=\"credit-date\">{date}</div>\n            </div>\n          </li>\n        );\n      });\n    }\n\n    return (\n      <div className=\"credits\">\n        <div className=\"credit-content\">\n        <div className='credit-content-left'>\n        <h1>Credit History</h1>\n        <ul className=\"credit-list\">{creditsView()}</ul>\n        </div>\n        \n        <div className='credit-content-right'>\n        <h1 className='account-balance'>\n        <AccountBalance accountBalance={this.props.accountBalance} />\n        </h1>\n        <form onSubmit={this.handleSubmit} className=\"credit-form\">\n\n          <div className=\"form-row\"> \n            <label htmlFor=\"description\" className=\"form-label\">Description</label>\n            <input type=\"text\" name=\"description\" id=\"description\" value={this.state.description} onChange={this.handleChange} className=\"form-input\" required/>\n          </div>\n          <div className=\"form-row\">\n            <label htmlFor=\"amount\" className=\"form-label\">Amount</label>\n            <input type=\"number\" name=\"amount\" id=\"amount\" value={this.state.amount} onChange={this.handleChange} className=\"form-input\" required min=\"0.01\" step=\"0.01\" />\n          </div>\n          <button type=\"submit\" className=\"form-button\">Add Credit</button>\n        </form>       \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Credits;","\nimport React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport './Debits.css'; // add this line\n\nclass Debits extends Component {\n  state = {\n    description: '',\n    amount: ''\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { description, amount } = this.state;\n    const id = Math.floor(Math.random() * 100000); // generate a random id\n    const date = new Date().toISOString().slice(0, 10); // set the current date\n    const debit = { id, description, amount, date };\n\n    this.props.addDebit(debit);\n\n    this.setState({\n      description: '',\n      amount: ''\n    });\n  }\n\n\n\n  render() {\n    const debitsView = () => {\n      const { debits } = this.props;\n      const reversedDebits = debits.slice().reverse(); // Add this line to make a reversed copy of the debits array\n      return reversedDebits.map((debit) => { // Update this line to use reversedDebits instead of debits\n        let date = debit.date.slice(0, 10);\n        return (\n          <li key={debit.id} className=\"debit-item\">\n            <div className=\"debit-info\">\n              <div className=\"debit-amount\">{debit.amount}</div>\n              <div className=\"debit-description\">{debit.description}</div>\n              <div className=\"debit-date\">{date}</div>\n            </div>\n          </li>\n        );\n      });\n    }\n\n    return (\n      <div className=\"debits\">\n        <div className=\"debit-content\">\n        <div className='debit-content-left'>\n        <h1>\n        Debit History\n        </h1>\n        <ul className=\"debit-list\">{debitsView()}</ul>\n        </div>\n        <div className='debit-content-right'>\n        <h1 className='account-balance'>\n        <AccountBalance accountBalance={this.props.accountBalance} />\n        </h1>\n        <form onSubmit={this.handleSubmit} className=\"debit-form\">\n\n          <div className=\"form-row\"> \n            <label htmlFor=\"description\" className=\"form-label\">Description</label>\n            <input type=\"text\" name=\"description\" id=\"description\" value={this.state.description} onChange={this.handleChange} className=\"form-input\" required/>\n          </div>\n          <div className=\"form-row\">\n            <label htmlFor=\"amount\" className=\"form-label\">Amount</label>\n            <input type=\"number\" name=\"amount\" id=\"amount\" value={this.state.amount} onChange={this.handleChange} className=\"form-input\" required min=\"0.01\" step=\"0.01\" />\n          </div>\n          <button type=\"submit\" className=\"form-button\">Add Debit</button>\n        </form>       \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  async componentDidMount() {  // Fetch data from API\n    let credits = await (await fetch('https://johnnylaicode.github.io/api/credits.json')).json();\n    let debits = await (await fetch('https://johnnylaicode.github.io/api/debits.json')).json();\n\n\n    this.setState({creditList: credits, debitList: debits});     //creditList and debitList get from api\n   \n    let totalCredits = 0;  //initalize account balance\n    let totalDebits = 0;  \n    credits.forEach(credit => {  //set credit and debit\n      totalCredits += credit.amount;\n    }\n    );\n    debits.forEach(debit => {\n      totalDebits += debit.amount;\n    }\n    );\n    //calculate account balance\n    this.setState({accountBalance: totalCredits - totalDebits});\n\n  }\n\n  addCredit = (credit) => {\n    const newCredits = [...this.state.creditList, credit];\n    this.setState({\n      creditList: newCredits,\n      accountBalance: this.state.accountBalance + Number(credit.amount)\n    });\n  }\n\n  addDebit = (debit) => {\n    const newDebits = [...this.state.debitList, debit];\n    this.setState({\n      debitList: newDebits,\n      accountBalance: this.state.accountBalance - Number(debit.amount)\n    });\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} userName={this.state.currentUser.userName}  />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n\n    const CreditsComponent = () => (\n      <Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />\n    )\n\n    const DebitsComponent = () => (\n      <Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance} />\n    )\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    //welcome username\n    return (\n      <Router basename=\"/assignment-4-bank-of-react\">\n       <div className=\"App\">\n    <header className=\"App-header\">\n      <nav className=\"navbar\">\n        <Link className=\"nav-link\" to=\"/\">Home</Link>\n        <Link className=\"nav-link\" to=\"/userProfile\">User Profile</Link>\n        <Link className=\"nav-link\" to=\"/login\">Log In</Link>\n        <Link className=\"nav-link\" to=\"/credits\">Credits</Link>\n        <Link className=\"nav-link\" to=\"/debits\">Debits</Link>\n      </nav>\n    </header>\n    <main className=\"App-main\">\n      <Route exact path=\"/\" render={HomeComponent} />\n      <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n      <Route exact path=\"/login\" render={LogInComponent} />\n      <Route exact path=\"/credits\" render={CreditsComponent} />\n      <Route exact path=\"/debits\" render={DebitsComponent} />\n    </main>\n  </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}