{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","description","amount","credit","id","Math","floor","random","date","Date","toISOString","slice","addCredit","className","credits","reverse","map","htmlFor","Debits","debits","debit","addDebit","App","newCredits","creditList","Number","logInInfo","newUser","currentUser","debitList","a","fetch","json","totalCredits","totalDebits","forEach","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.405691a7.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport './Credits.css'; // add this line\n\nclass Credits extends Component {\n  state = {\n    description: '',\n    amount: ''\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { description, amount } = this.state;\n    const id = Math.floor(Math.random() * 100000); // generate a random id\n    const date = new Date().toISOString().slice(0, 10); // set the current date\n    const credit = { id, description, amount, date };\n\n    this.props.addCredit(credit);\n\n    this.setState({\n      description: '',\n      amount: ''\n    });\n  }\n\n\n\n  render() {\n    const creditsView = () => {\n      const { credits } = this.props;\n      const reversedCredits = credits.slice().reverse(); // Add this line to make a reversed copy of the credits array\n      return reversedCredits.map((credit) => { // Update this line to use reversedCredits instead of credits\n        let date = credit.date.slice(0, 10);\n        return (\n          <li key={credit.id} className=\"credit-item\">\n            <div className=\"credit-info\">\n              <div className=\"credit-amount\">{credit.amount}</div>\n              <div className=\"credit-description\">{credit.description}</div>\n              <div className=\"credit-date\">{date}</div>\n            </div>\n          </li>\n        );\n      });\n    }\n\n    return (\n      <div className=\"credits\">\n        <div className=\"credits-header\">\n          <div className='credits-header-left'>\n            <Link to=\"/\" className=\"return-button\">\n              HOME\n            </Link>\n          </div>\n          <div className='credits-header-center'>\n              Credits\n          </div>\n          <div className=\"credits-header-right\">\n            <AccountBalance accountBalance={this.props.accountBalance} />\n          </div>\n        </div>\n        <div className=\"credit-content\">\n        <ul className=\"credit-list\">{creditsView()}</ul>\n        <form onSubmit={this.handleSubmit} className=\"credit-form\">\n          <div className=\"form-row\">\n            <label htmlFor=\"description\" className=\"form-label\">Description</label>\n            <input type=\"text\" name=\"description\" id=\"description\" value={this.state.description} onChange={this.handleChange} className=\"form-input\" />\n          </div>\n          <div className=\"form-row\">\n            <label htmlFor=\"amount\" className=\"form-label\">Amount</label>\n            <input type=\"number\" name=\"amount\" id=\"amount\" value={this.state.amount} onChange={this.handleChange} className=\"form-input\" />\n          </div>\n          <button type=\"submit\" className=\"form-button\">Add Credit</button>\n        </form>       \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  async componentDidMount() {  // Fetch data from API\n    let credits = await (await fetch('https://johnnylaicode.github.io/api/credits.json')).json();\n    let debits = await (await fetch('https://johnnylaicode.github.io/api/debits.json')).json();\n\n\n    this.setState({creditList: credits, debitList: debits});     //creditList and debitList get from api\n   \n    let totalCredits = 0;  //initalize account balance\n    let totalDebits = 0;  \n    credits.forEach(credit => {  //set credit and debit\n      totalCredits += credit.amount;\n    }\n    );\n    debits.forEach(debit => {\n      totalDebits += debit.amount;\n    }\n    );\n    //calculate account balance\n    this.setState({accountBalance: totalCredits - totalDebits});\n\n  }\n\n  addCredit = (credit) => {\n    const newCredits = [...this.state.creditList, credit];\n    this.setState({\n      creditList: newCredits,\n      accountBalance: this.state.accountBalance + Number(credit.amount)\n    });\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n\n    const CreditsComponent = () => (\n      <Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />\n    )\n\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/assignment-4-bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}