{"ast":null,"code":"var _jsxFileName = \"/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/assignment-4-bank-of-react/src/components/Credits.js\";\nimport React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport './Credits.css'; // Import CSS styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Credits extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      description: '',\n      amount: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        description,\n        amount\n      } = this.state;\n      const id = Math.floor(Math.random() * 100000); // Generate a random id\n\n      const date = new Date().toISOString().slice(0, 10); // Set the current date\n\n      const credit = {\n        id,\n        description,\n        amount,\n        date\n      }; // Call the addCredit method from parent component (App)\n\n      this.props.addCredit(credit); // Reset input fields\n\n      this.setState({\n        description: '',\n        amount: ''\n      });\n    };\n  }\n\n  render() {\n    // Render credit history in reverse order\n    const creditsView = () => {\n      const {\n        credits\n      } = this.props;\n      const reversedCredits = credits.slice().reverse(); // Make a reversed copy of the credits array\n\n      return reversedCredits.map(credit => {\n        let date = credit.date.slice(0, 10);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"credit-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"credit-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"credit-amount\",\n              children: credit.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"credit-description\",\n              children: credit.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"credit-date\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, credit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"credits\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credit-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"credit-content-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Credit History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"credit-list\",\n            children: creditsView()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"credit-content-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"account-balance\",\n            children: /*#__PURE__*/_jsxDEV(AccountBalance, {\n              accountBalance: this.props.accountBalance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            className: \"credit-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                className: \"form-label\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"description\",\n                id: \"description\",\n                value: this.state.description,\n                onChange: this.handleChange,\n                className: \"form-input\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"amount\",\n                className: \"form-label\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"amount\",\n                id: \"amount\",\n                value: this.state.amount,\n                onChange: this.handleChange,\n                className: \"form-input\",\n                required: true,\n                min: \"0.01\",\n                step: \"0.01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"form-button\",\n              children: \"Add Credit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Credits;","map":{"version":3,"sources":["/Users/kylegrande/Downloads/Documents/Spring23/Web Dev/assignment-4-bank-of-react/src/components/Credits.js"],"names":["React","Component","AccountBalance","Credits","state","description","amount","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","id","Math","floor","random","date","Date","toISOString","slice","credit","props","addCredit","render","creditsView","credits","reversedCredits","reverse","map","accountBalance"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport './Credits.css'; // Import CSS styles\n\nclass Credits extends Component {\n  // Initialize state\n  state = {\n    description: '',\n    amount: '',\n  };\n\n  // Handle input field changes\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  // Handle form submission\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { description, amount } = this.state;\n    const id = Math.floor(Math.random() * 100000); // Generate a random id\n    const date = new Date().toISOString().slice(0, 10); // Set the current date\n    const credit = { id, description, amount, date };\n\n    // Call the addCredit method from parent component (App)\n    this.props.addCredit(credit);\n\n    // Reset input fields\n    this.setState({\n      description: '',\n      amount: '',\n    });\n  };\n\n  render() {\n    // Render credit history in reverse order\n    const creditsView = () => {\n      const { credits } = this.props;\n      const reversedCredits = credits.slice().reverse(); // Make a reversed copy of the credits array\n      return reversedCredits.map((credit) => {\n        let date = credit.date.slice(0, 10);\n        return (\n          <li key={credit.id} className=\"credit-item\">\n            <div className=\"credit-info\">\n              <div className=\"credit-amount\">{credit.amount}</div>\n              <div className=\"credit-description\">{credit.description}</div>\n              <div className=\"credit-date\">{date}</div>\n            </div>\n          </li>\n        );\n      });\n    };\n\n    return (\n      <div className=\"credits\">\n        <div className=\"credit-content\">\n          <div className=\"credit-content-left\">\n            <h1>Credit History</h1>\n            <ul className=\"credit-list\">{creditsView()}</ul>\n          </div>\n\n          <div className=\"credit-content-right\">\n            <h1 className=\"account-balance\">\n              <AccountBalance accountBalance={this.props.accountBalance} />\n            </h1>\n            <form onSubmit={this.handleSubmit} className=\"credit-form\">\n              <div className=\"form-row\">\n                <label htmlFor=\"description\" className=\"form-label\">\n                  Description\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  id=\"description\"\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                  className=\"form-input\"\n                  required\n                />\n              </div>\n              <div className=\"form-row\">\n                <label htmlFor=\"amount\" className=\"form-label\">\n                  Amount\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"amount\"\n                  id=\"amount\"\n                  value={this.state.amount}\n                  onChange={this.handleChange}\n                  className=\"form-input\"\n                  required\n                  min=\"0.01\"\n                  step=\"0.01\"\n                />\n              </div>\n              <button type=\"submit\" className=\"form-button\">\n                Add Credit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Credits;\n"]},"metadata":{},"sourceType":"module"}